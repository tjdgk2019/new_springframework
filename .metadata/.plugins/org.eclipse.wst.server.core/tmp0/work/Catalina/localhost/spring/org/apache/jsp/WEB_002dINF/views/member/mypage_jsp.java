/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2024-06-28 05:05:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mypage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Document</title>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".content {\r\n");
      out.write("	background-color: rgb(247, 245, 245);\r\n");
      out.write("	width: 80%;\r\n");
      out.write("	margin: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".innerOuter {\r\n");
      out.write("	border: 1px solid lightgray;\r\n");
      out.write("	width: 80%;\r\n");
      out.write("	margin: auto;\r\n");
      out.write("	padding: 5% 10%;\r\n");
      out.write("	background-color: white;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/menubar.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"content\">\r\n");
      out.write("		<br>\r\n");
      out.write("		<br>\r\n");
      out.write("		<div class=\"innerOuter\">\r\n");
      out.write("			<h2>마이페이지</h2>\r\n");
      out.write("			<br>\r\n");
      out.write("\r\n");
      out.write("			<form action=\"update.do\" method=\"post\">\r\n");
      out.write("				<div class=\"form-group\">\r\n");
      out.write("					<label for=\"userId\">* ID : </label> <input type=\"text\"\r\n");
      out.write("						class=\"form-control\" id=\"userId\"\r\n");
      out.write("						value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.userId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"userId\" readonly>\r\n");
      out.write("					<br> <label for=\"userName\">* Name : </label> <input\r\n");
      out.write("						type=\"text\" class=\"form-control\" id=\"userName\"\r\n");
      out.write("						value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.userName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"userName\"\r\n");
      out.write("						required> <br> <label for=\"email\"> &nbsp;\r\n");
      out.write("						Email : </label> <input type=\"text\" class=\"form-control\" id=\"email\"\r\n");
      out.write("						value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.email }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"email\"> <br>\r\n");
      out.write("\r\n");
      out.write("					<label for=\"age\"> &nbsp; Age : </label> <input type=\"number\"\r\n");
      out.write("						class=\"form-control\" id=\"age\"\r\n");
      out.write("						value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.age }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"age\"> <br>\r\n");
      out.write("\r\n");
      out.write("					<label for=\"phone\"> &nbsp; Phone : </label> <input type=\"tel\"\r\n");
      out.write("						class=\"form-control\" id=\"phone\"\r\n");
      out.write("						value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.phone }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"phone\"> <br>\r\n");
      out.write("\r\n");
      out.write("					<label for=\"address\"> &nbsp; Address : </label> <input type=\"text\"\r\n");
      out.write("						class=\"form-control\" id=\"address\"\r\n");
      out.write("						value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.address }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"address\">\r\n");
      out.write("					<br> <label for=\"\"> &nbsp; Gender : </label> &nbsp;&nbsp; <input\r\n");
      out.write("						type=\"radio\" id=\"Male\" value=\"M\" name=\"\"> <label\r\n");
      out.write("						for=\"Male\">남자</label> &nbsp;&nbsp; <input type=\"radio\" id=\"Female\"\r\n");
      out.write("						value=\"F\" name=\"\"> <label for=\"Female\">여자</label>\r\n");
      out.write("					&nbsp;&nbsp;\r\n");
      out.write("					<script>\r\n");
      out.write("                     	widdow.onload = () =>{\r\n");
      out.write("                     		document.querySelector('input[value=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${session.loginUser.gender}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("]').checked =true;\r\n");
      out.write("                     	}\r\n");
      out.write("                    </script>\r\n");
      out.write("				</div>\r\n");
      out.write("				<br>\r\n");
      out.write("				<div class=\"btns\" align=\"center\">\r\n");
      out.write("					<button type=\"submit\" class=\"btn btn-primary\">수정하기</button>\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#changePassword\">비밀번호 변경하기</button>\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-danger\" data-toggle=\"modal\" data-target=\"#deleteForm\">회원탈퇴</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("		<br>\r\n");
      out.write("		<br>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<!-- 비밀번호변경 버튼 클릭 시 보여질 Modal -->\r\n");
      out.write("   <div class=\"modal fade\" id=\"changePassword\">\r\n");
      out.write("      <div class=\"modal-dialog modal-sm\">\r\n");
      out.write("         <div class=\"modal-content\">\r\n");
      out.write("            <!-- Modal Header -->\r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("               <h4 class=\"modal-title\">비밀번호 변경</h4>\r\n");
      out.write("               <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Modal body -->\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("               <label for=\"currentPassword\">현재 비밀번호:</label>\r\n");
      out.write("               <input type=\"password\" class=\"form-control\" id=\"currentPassword\" />\r\n");
      out.write("               <br>\r\n");
      out.write("               <label for=\"newPassword\">새 비밀번호:</label>\r\n");
      out.write("               <input type=\"password\" class=\"form-control\" id=\"newPassword\" />\r\n");
      out.write("               <br>\r\n");
      out.write("               <label for=\"newPasswordCheck\">새 비밀번호 확인:</label>\r\n");
      out.write("               <input type=\"password\" class=\"form-control\" id=\"newPasswordCheck\" />\r\n");
      out.write("               \r\n");
      out.write("               <br>\r\n");
      out.write("               <div id=\"changePasswordResult\"></div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Modal footer -->\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("               <button type=\"button\" class=\"btn btn-primary\" id=\"changePasswordBtn\">변경하기</button>\r\n");
      out.write("            </div>\r\n");
      out.write("         </div>\r\n");
      out.write("      </div>\r\n");
      out.write("   </div>\r\n");
      out.write("	\r\n");
      out.write("	<!-- 회원탈퇴 버튼 클릭 시 보여질 Modal -->\r\n");
      out.write("	<div class=\"modal fade\" id=\"deleteForm\">\r\n");
      out.write("		<div class=\"modal-dialog modal-sm\">\r\n");
      out.write("			<div class=\"modal-content\">\r\n");
      out.write("\r\n");
      out.write("				<!-- Modal Header -->\r\n");
      out.write("				<div class=\"modal-header\">\r\n");
      out.write("					<h4 class=\"modal-title\">회원탈퇴</h4>\r\n");
      out.write("					<button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<form action=\"delet.do\" method=\"post\">\r\n");
      out.write("					<input type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessinScope.longinUser.userId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("						name=\"userId\"></input>\r\n");
      out.write("					<!-- Modal body -->\r\n");
      out.write("					<div class=\"modal-body\">\r\n");
      out.write("						<div align=\"center\">\r\n");
      out.write("							탈퇴 후 복구가 불가능합니다. <br> 정말로 탈퇴 하시겠습니까? <br>\r\n");
      out.write("						</div>\r\n");
      out.write("						<br> <label for=\"userPwd\" class=\"mr-sm-2\">Password :\r\n");
      out.write("						</label> <input type=\"text\" class=\"form-control mb-2 mr-sm-2\"\r\n");
      out.write("							placeholder=\"Enter Password\" id=\"userPwd\" name=\"userPwd\">\r\n");
      out.write("						<br>\r\n");
      out.write("					</div>\r\n");
      out.write("					<!-- Modal footer -->\r\n");
      out.write("					<div class=\"modal-footer\" align=\"center\">\r\n");
      out.write("						<button type=\"submit\" class=\"btn btn-danger\"\r\n");
      out.write("							onclick=\"return deletePrompt();\">탈퇴하기</button>\r\n");
      out.write("					</div>\r\n");
      out.write("				</form>\r\n");
      out.write("				<script>\r\n");
      out.write("        function deletePrompt() {\r\n");
      out.write("            // const value = prompt('탈퇴를 원하시면 \"어쩌고저쩌고\"를 정확히 입력해주세요.');\r\n");
      out.write("            // console.log(value);\r\n");
      out.write("            // console.log(1 == 1);\r\n");
      out.write("            // console.log(typeof('1') === typeof(1));\r\n");
      out.write("\r\n");
      out.write("            // if(value === '어쩌고저쩌고'){\r\n");
      out.write("            //     // submit 요청을 보내고 싶은 것\r\n");
      out.write("            //     return true;\r\n");
      out.write("            // }\r\n");
      out.write("            // else{\r\n");
      out.write("            //     // submit 요청을 안가게 하고 싶은 것\r\n");
      out.write("            //     return false;\r\n");
      out.write("            // }\r\n");
      out.write("\r\n");
      out.write("            return prompt('탈퇴를 원하시면 \"어쩌고저쩌고\"를 정확히 입력해주세요.') === '어쩌고저쩌고' ? true : false;\r\n");
      out.write("        }\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("      ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
